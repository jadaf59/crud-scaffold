import { unstable_noStore as noStore } from "next/cache"
import { db } from "@/lib/db"
import { {{entity.tableName}} } from "@/lib/db/schema"
import { and, asc, desc, eq, like, or } from "drizzle-orm"

export async function get{{entity.pluralName}}() {
  noStore();
  return await db.select().from({{entity.tableName}});
}

export async function get{{entity.name}}ById(id: number) {
  noStore();
  const [result] = await db.select()
    .from({{entity.tableName}})
    .where(eq({{entity.tableName}}.id, id))
    .limit(1);
  
  return result;
}

export async function search{{entity.pluralName}}(searchTerm: string) {
  noStore();
  return await db.select()
    .from({{entity.tableName}})
    .where(
      or(
        {{#each entity.fields}}
        {{#if isSearchable}}
        like({{../entity.tableName}}.{{name}}, `%${searchTerm}%`),
        {{/if}}
        {{/each}}
      )
    );
}